diff -rup gtk+-3.24.22/gtk/gtkboxgadget.c gtk+-3.24.22-nowarn/gtk/gtkboxgadget.c
--- gtk+-3.24.22/gtk/gtkboxgadget.c	2020-06-11 04:45:39.000000000 +0200
+++ gtk+-3.24.22-nowarn/gtk/gtkboxgadget.c	2020-08-17 21:01:54.939897660 +0200
@@ -170,7 +170,6 @@ gtk_box_gadget_distribute (GtkBoxGadget
 
   if G_UNLIKELY (size < 0)
     {
-      g_critical ("%s: assertion 'size >= 0' failed in %s", G_STRFUNC, G_OBJECT_TYPE_NAME (gtk_css_gadget_get_owner (GTK_CSS_GADGET (gadget))));
       return;
     }
 
diff -rup gtk+-3.24.22/gtk/gtkcssgadget.c gtk+-3.24.22-nowarn/gtk/gtkcssgadget.c
--- gtk+-3.24.22/gtk/gtkcssgadget.c	2020-06-11 04:45:39.000000000 +0200
+++ gtk+-3.24.22-nowarn/gtk/gtkcssgadget.c	2020-08-17 21:01:54.939897660 +0200
@@ -665,13 +665,6 @@ gtk_css_gadget_get_preferred_size (GtkCs
 
   if (for_size > -1)
     {
-      if (for_size < min_for_size)
-        g_warning ("for_size smaller than min-size (%d < %d) "
-                   "while measuring gadget (node %s, owner %s)",
-                   for_size, min_for_size,
-                   gtk_css_node_get_name (gtk_css_gadget_get_node (gadget)),
-                   G_OBJECT_TYPE_NAME (gtk_css_gadget_get_owner (gadget)));
-
       for_size = MAX (0, for_size - extra_opposite);
     }
 
@@ -767,23 +760,11 @@ gtk_css_gadget_allocate (GtkCssGadget
 
   if (content_allocation.width < 0)
     {
-      g_warning ("Negative content width %d (allocation %d, extents %dx%d) "
-                 "while allocating gadget (node %s, owner %s)",
-                 content_allocation.width, allocation->width,
-                 extents.left, extents.right,
-                 gtk_css_node_get_name (gtk_css_gadget_get_node (gadget)),
-                 G_OBJECT_TYPE_NAME (gtk_css_gadget_get_owner (gadget)));
       content_allocation.width = 0;
     }
 
   if (content_allocation.height < 0)
     {
-      g_warning ("Negative content height %d (allocation %d, extents %dx%d) "
-                 "while allocating gadget (node %s, owner %s)",
-                 content_allocation.height, allocation->height,
-                 extents.top, extents.bottom,
-                 gtk_css_node_get_name (gtk_css_gadget_get_node (gadget)),
-                 G_OBJECT_TYPE_NAME (gtk_css_gadget_get_owner (gadget)));
       content_allocation.height = 0;
     }
 
@@ -845,10 +826,6 @@ gtk_css_gadget_draw (GtkCssGadget *gadge
 
   if (width < 0 || height < 0)
     {
-      g_warning ("Drawing a gadget with negative dimensions. "
-                 "Did you forget to allocate a size? (node %s owner %s)",
-                 gtk_css_node_get_name (gtk_css_gadget_get_node (gadget)),
-                 G_OBJECT_TYPE_NAME (gtk_css_gadget_get_owner (gadget)));
       x = 0;
       y = 0;
       width = gtk_widget_get_allocated_width (priv->owner);
diff -rup gtk+-3.24.22/gtk/gtkcssprovider.c gtk+-3.24.22-nowarn/gtk/gtkcssprovider.c
--- gtk+-3.24.22/gtk/gtkcssprovider.c	2020-06-11 04:45:39.000000000 +0200
+++ gtk+-3.24.22-nowarn/gtk/gtkcssprovider.c	2020-08-17 21:04:57.824941940 +0200
@@ -176,25 +176,6 @@ gtk_css_provider_parsing_error (GtkCssPr
                                 GtkCssSection   *section,
                                 const GError    *error)
 {
-  /* Only emit a warning when we have no error handlers. This is our
-   * default handlers. And in this case erroneous CSS files are a bug
-   * and should be fixed.
-   * Note that these warnings can also be triggered by a broken theme
-   * that people installed from some weird location on the internets.
-   */
-  if (!g_signal_has_handler_pending (provider,
-                                     css_provider_signals[PARSING_ERROR],
-                                     0,
-                                     TRUE))
-    {
-      char *s = _gtk_css_section_to_string (section);
-
-      g_warning ("Theme parsing error: %s: %s",
-                 s,
-                 error->message);
-
-      g_free (s);
-    }
 }
 
 /* This is exported privately for use in GtkInspector.
@@ -980,9 +961,6 @@ gtk_css_provider_propagate_error (GtkCss
   /* don't fail for deprecations */
   if (g_error_matches (error, GTK_CSS_PROVIDER_ERROR, GTK_CSS_PROVIDER_ERROR_DEPRECATED))
     {
-      s = _gtk_css_section_to_string (section);
-      g_warning ("Theme parsing error: %s: %s", s, error->message);
-      g_free (s);
       return;
     }
 

From 83c22ef3ded5bd60058a6f46bf202eb7e8ff4029 Mon Sep 17 00:00:00 2001
From: Remi Gacogne <remi.gacogne@powerdns.com>
Date: Fri, 28 Aug 2020 10:42:23 +0200
Subject: [PATCH] dnsdist: Get rid of allocations in the packet cache's fast path

This delivers a nice speed-up, up to ~40% in unrealistic micro-benchmarks,
likely much less in practice.
---
 dnsdist-cache.cc     | 7 +++----
 dnsdist-cache.hh     | 2 +-
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/dnsdist-cache.cc b/dnsdist-cache.cc
index c31a0a554c..9990f5abab 100644
--- a/dnsdist-cache.cc
+++ b/dnsdist-cache.cc
@@ -203,7 +203,7 @@ void DNSDistPacketCache::insert(uint32_t key, const boost::optional<Netmask>& su
 
 bool DNSDistPacketCache::get(const DNSQuestion& dq, uint16_t consumed, uint16_t queryId, char* response, uint16_t* responseLen, uint32_t* keyOut, boost::optional<Netmask>& subnet, bool dnssecOK, uint32_t allowExpired, bool skipAging)
 {
-  std::string dnsQName(dq.qname->toDNSString());
+  const auto& dnsQName = dq.qname->getStorage();
   uint32_t key = getKey(dnsQName, consumed, reinterpret_cast<const unsigned char*>(dq.dh), dq.len, dq.tcp);
 
   if (keyOut)
@@ -411,15 +411,14 @@ uint32_t DNSDistPacketCache::getMinTTL(const char* packet, uint16_t length, bool
   return getDNSPacketMinTTL(packet, length, seenNoDataSOA);
 }
 
-uint32_t DNSDistPacketCache::getKey(const std::string& qname, uint16_t consumed, const unsigned char* packet, uint16_t packetLen, bool tcp)
+uint32_t DNSDistPacketCache::getKey(const DNSName::string_t& qname, uint16_t consumed, const unsigned char* packet, uint16_t packetLen, bool tcp)
 {
   uint32_t result = 0;
   /* skip the query ID */
   if (packetLen < sizeof(dnsheader))
     throw std::range_error("Computing packet cache key for an invalid packet size");
   result = burtle(packet + 2, sizeof(dnsheader) - 2, result);
-  string lc(toLower(qname));
-  result = burtle((const unsigned char*) lc.c_str(), lc.length(), result);
+  result = burtleCI((const unsigned char*) qname.c_str(), qname.length(), result);
   if (packetLen < sizeof(dnsheader) + consumed) {
     throw std::range_error("Computing packet cache key for an invalid packet");
   }
diff --git a/dnsdist-cache.hh b/dnsdist-cache.hh
index 966f55cf50..79200c4b39 100644
--- a/dnsdist-cache.hh
+++ b/dnsdist-cache.hh
@@ -66,7 +66,7 @@ public:
   }
 
   static uint32_t getMinTTL(const char* packet, uint16_t length, bool* seenNoDataSOA);
-  static uint32_t getKey(const std::string& qname, uint16_t consumed, const unsigned char* packet, uint16_t packetLen, bool tcp);
+  static uint32_t getKey(const DNSName::string_t& qname, uint16_t consumed, const unsigned char* packet, uint16_t packetLen, bool tcp);
   static bool getClientSubnet(const char* packet, unsigned int consumed, uint16_t len, boost::optional<Netmask>& subnet);
 
 private:
